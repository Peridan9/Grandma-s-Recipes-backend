---
openapi: 3.0.0
info:
  title: Grandma's Recipes Website API
  description: This is an API for Grandma's Recipes website project
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
# local:
- url: "http://127.0.0.1:3000"
# remote:
# - url: "http://132.73.84.132"
tags:
- name: Auth
  description: Operations regarding registration and login/logout
- name: Recipes
  description: Operations for getting, setting and uploading recipies
- name: User
  description: User operations
paths:
  /register:
    post:
      tags:
      - Auth
      summary: A new user from the client is added to the server
      description: A JSON object contains all the details about the user.
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: A new user has been added
        "401":
          description: Wrong input parameters
        "402":
          description: Username taken
  /login:
    post:
      tags:
      - Auth
      summary: Lets the user log into the website using his credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginScheme'
        required: true
      responses:
        "200":
          description: Successful login
        # DK
        headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: session=87s97sdhgf279293f8w0e9
        # END
        "401":
          description: incorrect username or password
  # DK
  /logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "the user has ben successfully logged out"
  # END
  /recipes/getRandoms:
    get:
      tags:
      - Recipes
      summary: Retrives 3 random recipes
      description: An array containing 3 Json object representing 3 recipes
      responses:
        "200":
          description: 3 randoms recpies have been retrived
          content:
            application/json:
              schema:
                maxLength: 3
                type: array
                items:
                  $ref: '#/components/schemas/RecpieDescription'
        "403":
          description: "Could not retrieve the recipes, please try again"
  /recipes/{recipeId}: #DK - getRecipeDescription:
    get:
      tags:
      - Recipes
      summary: gets recepie from the DB
      description: get one recipe by ID from the DB
      # DK
      parameters:
      - name: recipeId
        in: path
        description: recipe's id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      # END
      responses:
        "200":
          description: one recepie has been retrived successfuly
          content:
            application/json:
              schema:
                # type: array
                items:
                  $ref: '#/components/schemas/RecpieDescription'
        "404":
          description: Could not find the recipe, please try again
  # DK - its duplicate
  # /recipes/searchForRecepie:
  #   get:
  #     tags:
  #     - Recipes
  #     summary: gets recepie from the DB
  #     description: get one recipe by ID from the DB
  #     responses:
  #       "200":
  #         description: one recepie has been retrived successfuly
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/RecepieView'
  #       "401":
  #         description: "Could not find the recipe, please try again"
  /users/lastWatched:
    get:
      tags:
      - Users
      summary: Gets 3 last watched recipes of the user
      description: The user will be able to see his 3 last watched recipes
      responses:
        "200":
          description: 3 last watched recipes by the user have been retrived
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecepieView'
        "404":
          description: "Could not retrieve the recipes, please try again"
      security:
      - cookieAuth: []  
    put:
      tags:
      - Users
      summary: update the last watched recipes list of the user
      description: update the last watched recipes list of the user by username
      responses:
        "200":
          description: the recepies list has been updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecepieView'
      security:
      - cookieAuth: []
  /users/addRecepie:
    post:
      tags:
      - Recipes
      summary: user creating new recepie
      description: the users recepie adds to the recipes in the DB
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecepieView'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecepieView'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecepieView'
        required: true
      responses:
        "200":
          description: 3 last watched recipes by the user have been returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecepieView'
      security:
      - cookieAuth: []
  # /users/recipes/getFavorites:
  /users/favorites:
    get:
      tags:
      - Users
      summary: Return the favorite recipes that were saved by user
      description: Get an array of recipes that were saved by a specific user
      responses:
        "200":
          description: successfully retrived favorite recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecepieView'
        "401":
          description: Could not retrieve the recipes, please try again
      security:
      - cookieAuth: []
    # DK
    post:
      tags:
      - Users
      summary: save recipe in the favorites list of a user
      description: save recipe in the favorites list of a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reciepeId:
                  type: string
                  description: reciepe's id which the user saved
                  example: 716429
      responses:
        "200":
          description: The Recipe successfully saved as favorite
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
    # END
  /users/getMyRecepies:
    get:
      tags:
      - Users
      summary: get all the users' recipes
      description: The use will be able to see all his recipes
      responses:
        "200":
          description: successfully retrived the user's recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecepieView'
        "401":
          description: "Could not retrieve the recipes, please try again"
      security:
      - cookieAuth: []
components:
  schemas:
    User:
      type: object
      properties:
        userName:
          maxLength: 8
          minLength: 3
          type: string
          description: username contains 3 to 8 letters only
          example: my_name
        firstName:
          type: string
          description: user's first name
          example: my_first_name
        lastName:
          type: string
          description: user's last name
          example: levi
        country:
          type: string
          description: user's country
          example: Israel
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: |
            password contains between 5 to 10 chars, at least one of them is a number and special char
          format: password
          example: my_name@55
        email:
          pattern: email #DK
          type: string
          description: user's email
          # format: email # DK
          example: my_name555@gmail.com
          # DK
          # image-url:
          #   pattern: URL
          #   type: string
          #   description: URL for the user's image
          #   example: https://cloudinary.com/
          
        # viewedRecipes:
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/RecpieDescription'
        # favoriteRecipes:
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/RecpieDescription'
        # lastWatchedRecipes:
        #   maxLength: 3
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/RecpieDescription'
        # END
      description: Model containing user info
    LoginScheme:
      type: object
      properties:
        userName:
          maxLength: 8
          minLength: 3
          type: string
          description: username contains 3 to 8 letters only
        password:
          maxLength: 10
          minLength: 5
          # type: string
          description: |
            password contains between 5 to 10 chars, at least one number and special char
          format: password
        example:
          username: my_name
          password: my_name@55
    RecpieDescription: # DK - RecipePreview
      type: object
      properties:
        id:
          type: string
          example: "209"
        image:
          type: string
          format: URL # path
          example: https://medias.hashulchan.co.il/www/uploads/2022/04/IMG_9569-750x500-1651048432.jpg
        title:
          type: string
          example: Potato carpaccio
        coockingTime: # DK -readyInMinutes
          type: integer
          description: the time in minutes takes to make this recipe # DK
          format: minutes
          example: 20
        popularity:
          type: integer
          description: how many likes this recipe got # DK
          example: 302
        isVegan: # DK - vegetarian
          type: boolean
          description: does the recipe vegetarian
          example: true
        # vegan:
        #   type: boolean
        #   description: indication if the recipe is vegan
        #   example: false
        isGlutenFree:
          type: boolean
          description: does the recipe gluten free
          example: false
        url: # DK - reqired?
          type: string
          format: url
          example: |
            'https://www.hashulchan.co.il/%D7%9E%D7%AA%D7%9B%D7%95%D7%A0%D7%99%D7%9D/%d7%a7%d7%a8%d7%a4%d7%a6%d7%95-%d7%aa%d7%a4%d7%95%d7%97-%d7%90%d7%93%d7%9e%d7%94/'
      description: Model containing a recpie description
    RecepieView: # DK - may be redundent
      type: object
      properties:
        recepieDescription:
          $ref: '#/components/schemas/RecpieDescription'
        ingridiants:
          type: object
          additionalProperties:
            type: integer
        cookingInstuctions:
          type: string
        dishesNum:
          type: integer
          example: 4
      description: Modal containing the recepie
